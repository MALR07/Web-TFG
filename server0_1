// Importamos el módulo 'express', que es el framework para crear servidores en Node.js
const express = require('express');

// Importamos la instancia de Sequelize configurada en 'database.js'
const sequelize = require('./config/database'); 

// Importamos los modelos (User, Plato y Reserva) para usarlos y realizar sincronización
const User = require('./models/users');
const Plato = require('./models/platos');
const Reserva = require('./models/reservas');

// Creamos una instancia de la aplicación Express, que será nuestro servidor
const app = express();

// Definimos el puerto en el que el servidor va a escuchar
const PORT = 3001;

// Middleware
// Este middleware permite que el servidor entienda y procese datos en formato JSON
app.use(express.json());

// Verificamos la conexión con la base de datos
sequelize.authenticate()
  .then(() => {
    console.log('Conexión a la base de datos exitosa!');
  })
  .catch((error) => {
    console.error('No se pudo conectar a la base de datos:', error);
  });

// Sincronización de los modelos con la base de datos
// Esto se asegura de que las tablas en la base de datos estén sincronizadas con nuestros modelos Sequelize
sequelize.sync({ force: false })  // 'force: false' evita que se eliminen y recreen las tablas si ya existen
  .then(() => {
    console.log('Las tablas están sincronizadas correctamente.');
  })
  .catch((error) => {
    console.error('Error al sincronizar las tablas:', error);
  });

// Definimos una ruta básica (la raíz '/') que responde con un mensaje
app.get('/', (req, res) => {
    res.send('¡El servidor está en funcionamiento!');
});

// Iniciamos el servidor y le decimos que escuche en el puerto definido (3001 en este caso)
// Cuando el servidor esté en funcionamiento, se ejecutará esta función y mostrará el mensaje en consola
app.listen(PORT, () => {
    console.log(El servidor está en funcionamiento en http://localhost:${PORT});
});

